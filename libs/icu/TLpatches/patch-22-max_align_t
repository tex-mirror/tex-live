	As of ICU 68.2, they required max_align_t to be in the std::
	namespace, which it isn't with the CentOS 7 g++.

--- icu/source/tools/toolutil/toolutil.cpp	2020-12-17 11:34:38.000000000 -0800
+++ icu-src/source/tools/toolutil/toolutil.cpp	2021-02-13 09:21:20.320506318 -0800
@@ -243,5 +243,5 @@
     int32_t capacity, maxCapacity, size, idx;
     void *array;
-    alignas(std::max_align_t) char staticArray[1];
+    alignas(max_align_t) char staticArray[1];
 };
 
--- icu/source/common/utext.cpp	2020-12-17 11:34:38.000000000 -0800
+++ icu-src/source/common/utext.cpp	2021-02-13 09:15:58.637913024 -0800
@@ -570,5 +570,5 @@
 struct ExtendedUText {
     UText               ut;
-    std::max_align_t    extension;
+    max_align_t    extension;
 };
 
@@ -585,5 +585,5 @@
         int32_t spaceRequired = sizeof(UText);
         if (extraSpace > 0) {
-            spaceRequired = sizeof(ExtendedUText) + extraSpace - sizeof(std::max_align_t);
+            spaceRequired = sizeof(ExtendedUText) + extraSpace - sizeof(max_align_t);
         }
         ut = (UText *)uprv_malloc(spaceRequired);
--- icu/source/common/uarrsort.cpp	2020-12-17 11:34:38.000000000 -0800
+++ icu-src/source/common/uarrsort.cpp	2021-02-13 09:14:58.120928533 -0800
@@ -38,5 +38,5 @@
 
 static constexpr int32_t sizeInMaxAlignTs(int32_t sizeInBytes) {
-    return (sizeInBytes + sizeof(std::max_align_t) - 1) / sizeof(std::max_align_t);
+    return (sizeInBytes + sizeof(max_align_t) - 1) / sizeof(max_align_t);
 }
 
@@ -142,5 +142,5 @@
               UComparator *cmp, const void *context, UErrorCode *pErrorCode) {
 
-    icu::MaybeStackArray<std::max_align_t, sizeInMaxAlignTs(STACK_ITEM_SIZE)> v;
+    icu::MaybeStackArray<max_align_t, sizeInMaxAlignTs(STACK_ITEM_SIZE)> v;
     if (sizeInMaxAlignTs(itemSize) > v.getCapacity() &&
             v.resize(sizeInMaxAlignTs(itemSize)) == nullptr) {
@@ -236,5 +236,5 @@
             UComparator *cmp, const void *context, UErrorCode *pErrorCode) {
     /* allocate two intermediate item variables (x and w) */
-    icu::MaybeStackArray<std::max_align_t, sizeInMaxAlignTs(STACK_ITEM_SIZE) * 2> xw;
+    icu::MaybeStackArray<max_align_t, sizeInMaxAlignTs(STACK_ITEM_SIZE) * 2> xw;
     if(sizeInMaxAlignTs(itemSize)*2 > xw.getCapacity() &&
             xw.resize(sizeInMaxAlignTs(itemSize) * 2) == nullptr) {
